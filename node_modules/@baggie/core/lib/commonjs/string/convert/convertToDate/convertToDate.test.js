"use strict";

var _convertToDate = require("./convertToDate");
jest.useFakeTimers().setSystemTime(new Date("2022-01-31").getTime());
describe("convertToDate", () => {
  test("String to a date", () => {
    expect((0, _convertToDate.convertToDate)("17-06-1986").getTime()).toBe(519350400000);
    expect((0, _convertToDate.convertToDate)("31012020").getTime()).toBe(1580428800000);
    expect((0, _convertToDate.convertToDate)("day: 31, month: 01, year: 2020").getTime()).toBe(1580428800000);
  });
  test("String to a date (month before day)", () => {
    expect((0, _convertToDate.convertToDate)("01-31-2020", {
      monthBeforeDay: true
    }).getTime()).toBe(1580428800000);
    expect((0, _convertToDate.convertToDate)("01312020", {
      monthBeforeDay: true
    }).getTime()).toBe(1580428800000);
    expect((0, _convertToDate.convertToDate)("month: 01, day: 31, year: 2020", {
      monthBeforeDay: true
    }).getTime()).toBe(1580428800000);
  });
  test("String to a date (zero based month)", () => {
    expect((0, _convertToDate.convertToDate)("00-31-2020", {
      monthBeforeDay: true,
      zeroBasedMonth: true
    }).getTime()).toBe(1580428800000);
    expect((0, _convertToDate.convertToDate)("00312020", {
      monthBeforeDay: true,
      zeroBasedMonth: true
    }).getTime()).toBe(1580428800000);
    expect((0, _convertToDate.convertToDate)("month: 0, day: 31, year: 2020", {
      monthBeforeDay: true,
      zeroBasedMonth: true
    }).getTime()).toBe(1580428800000);
  });
  test("Object to a date", () => {
    expect((0, _convertToDate.convertToDate)({
      day: 31,
      month: 1,
      year: 2020
    }).getTime()).toBe(1580428800000);
    expect((0, _convertToDate.convertToDate)({
      day: "31",
      month: "01",
      year: "2020"
    }).getTime()).toBe(1580428800000);
    expect((0, _convertToDate.convertToDate)({
      day: 31,
      month: "00",
      year: 2020
    }, {
      zeroBasedMonth: true
    }).getTime()).toBe(1580428800000);
  });
  test("Invalid", () => {
    expect((0, _convertToDate.convertToDate)({
      day: 31,
      year: 2020
    })).toBe(undefined);
    expect((0, _convertToDate.convertToDate)({
      day: "131",
      month: "01",
      year: "2020"
    })).toBe(undefined);
    expect((0, _convertToDate.convertToDate)("1100")).toBe(undefined);
  });
});
//# sourceMappingURL=convertToDate.test.js.map