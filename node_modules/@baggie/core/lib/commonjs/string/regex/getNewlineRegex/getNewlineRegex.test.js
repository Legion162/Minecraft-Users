"use strict";

var _getNewlineRegex = require("./getNewlineRegex");
describe("getNewlineRegex", () => {
  test("Replace new lines", () => {
    expect("This is a text with a single  \r  line break.".replace((0, _getNewlineRegex.getNewlineRegex)(), "-")).toBe("This is a text with a single  -  line break.");
    expect("This is a text with a single\n  line break.".replace((0, _getNewlineRegex.getNewlineRegex)(), "-")).toBe("This is a text with a single-  line break.");
    expect("This is a text with a single  \r\nline break.".replace((0, _getNewlineRegex.getNewlineRegex)(), "-")).toBe("This is a text with a single  -line break.");
    expect("This is a\r text with\n a single  \r\nline break.".replace((0, _getNewlineRegex.getNewlineRegex)(), "-")).toBe("This is a- text with- a single  -line break.");
  });
  test("Replace new lines and whitespace", () => {
    expect("This is a text with a single  \r  line break.".replace((0, _getNewlineRegex.getNewlineRegex)(true), "-")).toBe("This is a text with a single-line break.");
    expect("This is a text with a single\n  line break.".replace((0, _getNewlineRegex.getNewlineRegex)(true), "-")).toBe("This is a text with a single-line break.");
    expect("This is a\r text with\n a single  \r\nline break.".replace((0, _getNewlineRegex.getNewlineRegex)(true), "-")).toBe("This is a-text with-a single-line break.");
    expect(`This is a
text`.replace((0, _getNewlineRegex.getNewlineRegex)(true), "-")).toBe("This is a-text");
  });
});
//# sourceMappingURL=getNewlineRegex.test.js.map