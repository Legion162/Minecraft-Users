"use strict";

var _getPasswordRegex = require("./getPasswordRegex");
describe("getPasswordRegex", () => {
  test("Valid password", () => {
    expect((0, _getPasswordRegex.getPasswordRegex)().test(`abcABC_1`)).toBe(true);
    expect((0, _getPasswordRegex.getPasswordRegex)({
      minDigits: 2
    }).test(`abcAB_11`)).toBe(true);
    expect((0, _getPasswordRegex.getPasswordRegex)({
      minSpecial: 2
    }).test(`abcAB_~1`)).toBe(true);
    expect((0, _getPasswordRegex.getPasswordRegex)({
      allowUnicode: true
    }).test(`æøåÆØÅ123_-`)).toBe(true);
    expect((0, _getPasswordRegex.getPasswordRegex)({
      minLength: 12,
      maxLength: 12,
      minDigits: 3,
      minSpecial: 3,
      minLowercase: 3,
      minUppercase: 3
    }).test(`abcABC_~!012`)).toBe(true);
  });
  test("Invalid password", () => {
    expect((0, _getPasswordRegex.getPasswordRegex)({
      minDigits: 2
    }).test(`abcABC_1`)).toBe(false);
    expect((0, _getPasswordRegex.getPasswordRegex)({
      minLength: 12
    }).test(`abcABC_1`)).toBe(false);
    expect((0, _getPasswordRegex.getPasswordRegex)({
      minSpecial: 2
    }).test(`abcABC_1`)).toBe(false);
    expect((0, _getPasswordRegex.getPasswordRegex)({
      minUppercase: 2
    }).test(`abcdeA_1`)).toBe(false);
    expect((0, _getPasswordRegex.getPasswordRegex)({
      minLowercase: 2
    }).test(`aABCDE_1`)).toBe(false);
    expect((0, _getPasswordRegex.getPasswordRegex)({
      maxLength: 12
    }).test(`abcABC_123456`)).toBe(false);
    expect((0, _getPasswordRegex.getPasswordRegex)({
      specialCharacters: "-'*"
    }).test(`abcABC_1`)).toBe(false);
    expect((0, _getPasswordRegex.getPasswordRegex)({
      forbiddenCharacters: "_"
    }).test(`abcABC_1`)).toBe(false);
    expect((0, _getPasswordRegex.getPasswordRegex)({
      minLength: 12,
      maxLength: 12,
      minDigits: 3,
      minSpecial: 3,
      minLowercase: 3,
      minUppercase: 3
    }).test(`oabcABC_~!012`)).toBe(false);
  });
});
//# sourceMappingURL=getPasswordRegex.test.js.map