"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.Example = void 0;
var _react = _interopRequireWildcard(require("react"));
var _blocks = require("@storybook/blocks");
var _react2 = require("@baggie/react");
var _getCprRegex = require("./getCprRegex");
function _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== "function") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function (nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }
function _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== "object" && typeof obj !== "function") { return { default: obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== "default" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }
const Example = props => {
  const [cpr, setCpr] = (0, _react.useState)(props.cprNumber);
  const isValid = (0, _react.useMemo)(() => (0, _getCprRegex.getCprRegex)().test(cpr), [cpr]);
  return /*#__PURE__*/_react.default.createElement(_react.default.Fragment, null, /*#__PURE__*/_react.default.createElement(_react2.InputWrapper, {
    label: "CPR number",
    labelForId: "cpr-input"
  }, /*#__PURE__*/_react.default.createElement("input", {
    id: "cpr-input",
    value: cpr,
    onChange: _ref => {
      let {
        target
      } = _ref;
      return setCpr(target.value);
    },
    spellCheck: false
  })), /*#__PURE__*/_react.default.createElement(_blocks.Source, {
    dark: true,
    code: `
import { getCprRegex } from "@baggie/core";

const cprNumber = "${cpr}";

const isCprFormatValid = getCprRegex().test(cprNumber);
// isCprFormatValid = ${isValid ? "true" : "false"}
`
  }), /*#__PURE__*/_react.default.createElement("b", null, "The returned regex:"), /*#__PURE__*/_react.default.createElement(_blocks.Source, {
    dark: true,
    code: `new RegExp("${(0, _getCprRegex.getCprRegex)().source}", "${(0, _getCprRegex.getCprRegex)().flags}")`
  }));
};
exports.Example = Example;
//# sourceMappingURL=Example.js.map