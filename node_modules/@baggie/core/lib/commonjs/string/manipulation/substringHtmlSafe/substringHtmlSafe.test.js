"use strict";

var _substringHtmlSafe = require("./substringHtmlSafe");
describe("substringHtmlEntitySafe", () => {
  test("Use on basic string", () => {
    expect((0, _substringHtmlSafe.substringHtmlSafe)("lorem ipsum dolor sit amet", 1, 20)).toBe("orem ipsum dolor si");
    expect((0, _substringHtmlSafe.substringHtmlSafe)("lorem ipsum dolor sit amet", 0, 10)).toBe("lorem ipsu");
    expect((0, _substringHtmlSafe.substringHtmlSafe)("lorem ipsum dolor sit amet", 0)).toBe("lorem ipsum dolor sit amet");
  });
  test("Use on string with HTML", () => {
    expect((0, _substringHtmlSafe.substringHtmlSafe)("lorem &nbsp; ipsum &#58;dolor sit&sup2;amet", 0, 20)).toBe("lorem &nbsp; ipsum :dolor");
    expect((0, _substringHtmlSafe.substringHtmlSafe)("<b>lorem</b> &nbsp; <i>ipsum</i> &#58;dolor sit&sup2;amet", 6)).toBe("&nbsp; <i>ipsum</i> :dolor sit²amet");
    expect((0, _substringHtmlSafe.substringHtmlSafe)(`<div style="color: red;">lorem &nbsp; <b class="big">ipsum &#58;dolor</b></div> sit&sup2;amet`, 8, 18)).toBe(`<b class="big">ipsum :dol</b>`);
  });
  test("Negative end index", () => {
    expect((0, _substringHtmlSafe.substringHtmlSafe)("lorem &nbsp; ipsum &#58;dolor sit&sup2;amet", 0, -3)).toBe("lorem &nbsp; ipsum :dolor sit²a");
    expect((0, _substringHtmlSafe.substringHtmlSafe)("lorem &nbsp; ipsum &#100;dolor sit&sup2;amet", 7, -20)).toBe(" i");
  });
});
//# sourceMappingURL=substringHtmlSafe.test.js.map