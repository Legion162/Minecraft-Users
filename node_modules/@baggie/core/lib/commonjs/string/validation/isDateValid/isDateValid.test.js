"use strict";

var _isDateValid = require("./isDateValid");
describe("isDateValid", () => {
  test("Date as string", () => {
    expect((0, _isDateValid.isDateValid)("31-01-2020")).toBe(true);
    expect((0, _isDateValid.isDateValid)("31012020")).toBe(true);
    expect((0, _isDateValid.isDateValid)("day: 31, month: 01, year: 2020")).toBe(true);
  });
  test("Date as string (month before day)", () => {
    expect((0, _isDateValid.isDateValid)("01-31-2020", {
      monthBeforeDay: true
    })).toBe(true);
    expect((0, _isDateValid.isDateValid)("01312020", {
      monthBeforeDay: true
    })).toBe(true);
    expect((0, _isDateValid.isDateValid)("month: 01, day: 31, year: 2020", {
      monthBeforeDay: true
    })).toBe(true);
  });
  test("Date as string (zero based month)", () => {
    expect((0, _isDateValid.isDateValid)("00-31-2020", {
      monthBeforeDay: true,
      zeroBasedMonth: true
    })).toBe(true);
    expect((0, _isDateValid.isDateValid)("00312020", {
      monthBeforeDay: true,
      zeroBasedMonth: true
    })).toBe(true);
    expect((0, _isDateValid.isDateValid)("month: 0, day: 31, year: 2020", {
      monthBeforeDay: true,
      zeroBasedMonth: true
    })).toBe(true);
  });
  test("Date as object", () => {
    expect((0, _isDateValid.isDateValid)({
      day: 31,
      month: 1,
      year: 2020
    })).toBe(true);
    expect((0, _isDateValid.isDateValid)({
      day: "31",
      month: "01",
      year: "2020"
    })).toBe(true);
    expect((0, _isDateValid.isDateValid)({
      day: 31,
      month: "00",
      year: 2020
    }, {
      zeroBasedMonth: true
    })).toBe(true);
  });
});
//# sourceMappingURL=isDateValid.test.js.map