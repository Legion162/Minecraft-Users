"use strict";

var _isElementParentTo = require("./isElementParentTo");
describe("isElementParentTo", () => {
  test("Element is parent", () => {
    document.body.innerHTML = `<div id="parent"><div><div id="target"></div></div></div>`;
    const parent = document.getElementById("parent");
    const child = document.getElementById("target");
    expect((0, _isElementParentTo.isElementParentTo)(parent, child)).toBe(true);
  });
  test("Element is immediate parent", () => {
    document.body.innerHTML = `<div><div id="parent"><div id="target"></div></div></div>`;
    const parent = document.getElementById("parent");
    const child = document.getElementById("target");
    expect((0, _isElementParentTo.isElementParentTo)(parent, child, true)).toBe(true);
  });
  test("Element is not immediate parent", () => {
    document.body.innerHTML = `<div id="parent"><div><div id="target"></div></div></div>`;
    const parent = document.getElementById("parent");
    const child = document.getElementById("target");
    expect((0, _isElementParentTo.isElementParentTo)(parent, child, true)).toBe(false);
  });
  test("Element is not parent", () => {
    document.body.innerHTML = `<div id="parent"><div><div id="target"></div></div></div>`;
    const parent = document.getElementById("parent");
    const child = document.getElementById("target");
    expect((0, _isElementParentTo.isElementParentTo)(child, parent)).toBe(false);
  });
});
//# sourceMappingURL=isElementParentTo.test.js.map