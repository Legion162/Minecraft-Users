"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.Example = void 0;
var _react = _interopRequireWildcard(require("react"));
var _blocks = require("@storybook/blocks");
var _react2 = require("@baggie/react");
var _getFrequency = require("./getFrequency");
function _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== "function") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function (nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }
function _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== "object" && typeof obj !== "function") { return { default: obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== "default" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }
const printMap = map => {
  return "Map {\n" + Array.from(map).reduce((obj, _ref) => {
    let [key, value] = _ref;
    // eslint-disable-next-line @typescript-eslint/restrict-template-expressions
    obj += `    ${typeof key === "string" ? `"${key}"` : JSON.parse(key)} => ${value},\n`;
    return obj;
  }, "") + "}";
};
const Example = props => {
  const [inputString, setInputString] = (0, _react.useState)(props.defaultInput.join(", "));
  const [returnMap, setReturnMap] = (0, _react.useState)(false);
  const {
    input,
    result
  } = (0, _react.useMemo)(() => {
    const inputs = inputString.split(/\s*,\s*/).filter(value => value.length).map(string => string.match(/^-?[0-9]*\.?[0-9]*$/) ? parseFloat(string) : string);
    return {
      input: inputs,
      result: (0, _getFrequency.getFrequency)(inputs, returnMap)
    };
  }, [inputString, returnMap]);
  return /*#__PURE__*/_react.default.createElement(_react.default.Fragment, null, /*#__PURE__*/_react.default.createElement("div", {
    style: {
      display: "flex",
      gap: "10px"
    }
  }, /*#__PURE__*/_react.default.createElement(_react2.InputWrapper, {
    label: "Input",
    labelForId: "input-input"
  }, /*#__PURE__*/_react.default.createElement("input", {
    id: "input-input",
    value: inputString,
    onChange: _ref2 => {
      let {
        target
      } = _ref2;
      return setInputString(target.value);
    }
  }))), /*#__PURE__*/_react.default.createElement("label", null, /*#__PURE__*/_react.default.createElement("input", {
    type: "checkbox",
    checked: returnMap,
    onChange: () => setReturnMap(current => !current)
  }), " ", "Return as Map object"), /*#__PURE__*/_react.default.createElement(_blocks.Source, {
    dark: true,
    code: `
import { getFrequency } from "@baggie/core";

const input = [${input.map(item => typeof item === "string" ? `"${item}"` : item).join(", ")}];

const result = getFrequency(input${returnMap ? ", true" : ""});
/*
result = ${returnMap ? printMap(result) : JSON.stringify(result, null, 4)}
*/
`
  }));
};
exports.Example = Example;
//# sourceMappingURL=Example.js.map