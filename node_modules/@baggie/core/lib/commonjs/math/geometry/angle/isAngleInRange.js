"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.isAngleInRange = void 0;
/**
 * Check if an angle is within one or multiple ranges of angles.
 *
 * @example
 * **Basic usage:**
 * ```ts
 * import { isAngleInRange } from "@baggie/core";
 *
 * const checkA = isAngleInRange(10, [5, 15]);
 * // checkA = true
 *
 * const checkB = isAngleInRange(300, [100, 200]);
 * // checkB = false
 *
 * const checkC = isAngleInRange(360, [100, 1]);
 * // checkC = true
 *
 * const checkD = isAngleInRange(360, [100, -1]);
 * // checkD = false
 * ```
 */
const isAngleInRange = function (angle) {
  for (var _len = arguments.length, ranges = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {
    ranges[_key - 1] = arguments[_key];
  }
  return ranges.reduce((inRange, range) => {
    if (inRange) return inRange;
    const [from, to] = range;
    if (from > to) {
      return angle >= -(360 % from) && angle <= to || angle >= from && angle <= 360 + to;
    }
    return angle >= from && angle <= to;
  }, false);
};
exports.isAngleInRange = isAngleInRange;
//# sourceMappingURL=isAngleInRange.js.map