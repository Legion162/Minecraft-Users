"use strict";

var _getCoordinatesAngle = require("./getCoordinatesAngle");
describe("getCoordinatesAngle", () => {
  test("Get angle from one set of coordinates to another", () => {
    expect((0, _getCoordinatesAngle.getCoordinatesAngle)({
      x: 0,
      y: 10
    }, {
      x: 10,
      y: 0
    })).toBe(225);
    expect((0, _getCoordinatesAngle.getCoordinatesAngle)({
      x: 0,
      y: 10
    }, {
      x: 0,
      y: 0
    })).toBe(270);
  });
  test("Get angle from one set of coordinates to another (clockwise)", () => {
    expect((0, _getCoordinatesAngle.getCoordinatesAngle)({
      x: 0,
      y: 10
    }, {
      x: 10,
      y: 0
    }, {
      clockwise: true
    })).toBe(135);
    expect((0, _getCoordinatesAngle.getCoordinatesAngle)({
      x: 0,
      y: 10
    }, {
      x: 0,
      y: 0
    }, {
      clockwise: true
    })).toBe(90);
  });
  test("Get angle from one set of coordinates to another (with an offset)", () => {
    expect((0, _getCoordinatesAngle.getCoordinatesAngle)({
      x: 0,
      y: 10
    }, {
      x: 10,
      y: 0
    }, {
      offset: 100
    })).toBe(325);
    expect((0, _getCoordinatesAngle.getCoordinatesAngle)({
      x: 0,
      y: 10
    }, {
      x: 0,
      y: 0
    }, {
      offset: -90
    })).toBe(180);
    expect((0, _getCoordinatesAngle.getCoordinatesAngle)({
      x: 0,
      y: 10
    }, {
      x: 10,
      y: 0
    }, {
      clockwise: true,
      offset: 100
    })).toBe(235);
    expect((0, _getCoordinatesAngle.getCoordinatesAngle)({
      x: 0,
      y: 10
    }, {
      x: 0,
      y: 0
    }, {
      clockwise: true,
      offset: -90
    })).toBe(0);
  });
});
//# sourceMappingURL=getCoordinatesAngle.test.js.map