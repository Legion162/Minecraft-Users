"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.getDistanceOnSphere = void 0;
var _degreesToRadians = require("../../radians/degreesToRadians");
/**
 * Get distance between two sets of coordinates on a sphere using the Haversine
 * Distance Formula.
 *
 * @example
 * **Basic usage:**
 * ```ts
 * import { getDistanceOnSphere } from "@baggie/core";
 *
 * const from = { lat: 56.15674, lng: 10.21076 };
 * const to = { lat: 57.048, lng: 9.9187 };
 *
 * const distance = getDistanceOnSphere(from, to, 12742);
 * // distance = 100.70265108699398
 * ```
 */
const getDistanceOnSphere = (from, to, diameter) => {
  const dLat = (0, _degreesToRadians.degreesToRadians)(to.lat - from.lat);
  const dLon = (0, _degreesToRadians.degreesToRadians)(to.lng - from.lng);
  const a = Math.sin(dLat / 2) * Math.sin(dLat / 2) + Math.cos((0, _degreesToRadians.degreesToRadians)(from.lat)) * Math.cos((0, _degreesToRadians.degreesToRadians)(to.lat)) * Math.sin(dLon / 2) * Math.sin(dLon / 2);
  return diameter * Math.atan2(Math.sqrt(a), Math.sqrt(1 - a));
};
exports.getDistanceOnSphere = getDistanceOnSphere;
//# sourceMappingURL=getDistanceOnSphere.js.map