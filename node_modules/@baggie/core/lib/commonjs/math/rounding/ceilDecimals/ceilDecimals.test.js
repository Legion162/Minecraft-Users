"use strict";

var _ceilDecimals = require("./ceilDecimals");
describe("decimalCeil", () => {
  test("Very small number", () => {
    expect((0, _ceilDecimals.ceilDecimals)(1e-8, 2)).toBe(0.01);
  });
  test("Simple cases", () => {
    expect((0, _ceilDecimals.ceilDecimals)(5.12, 1)).toBe(5.2);
    expect((0, _ceilDecimals.ceilDecimals)(-5.12, 1)).toBe(-5.1);
  });
  test("Edge cases", () => {
    expect((0, _ceilDecimals.ceilDecimals)(65.18, 1)).toBe(65.2);
    expect((0, _ceilDecimals.ceilDecimals)(9.131, 2)).toBe(9.14);
    expect((0, _ceilDecimals.ceilDecimals)(65.181, 2)).toBe(65.19);
    expect((0, _ceilDecimals.ceilDecimals)(65.18, 5)).toBe(65.18);
    expect((0, _ceilDecimals.ceilDecimals)(-2.26, 1)).toBe(-2.2);
    expect((0, _ceilDecimals.ceilDecimals)(-2.261, 2)).toBe(-2.26);
    expect((0, _ceilDecimals.ceilDecimals)(-18.159, 2)).toBe(-18.15);
    expect((0, _ceilDecimals.ceilDecimals)(-18.15, 5)).toBe(-18.15);
  });
  test("Negative decimal places", () => {
    expect((0, _ceilDecimals.ceilDecimals)(1262.48, -1)).toBe(1270);
    expect((0, _ceilDecimals.ceilDecimals)(1262.48, -2)).toBe(1300);
  });
});
//# sourceMappingURL=ceilDecimals.test.js.map