"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.Example = void 0;
var _react = _interopRequireWildcard(require("react"));
var _blocks = require("@storybook/blocks");
var _react2 = require("@baggie/react");
var _getTimeDifference = require("./getTimeDifference");
function _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== "function") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function (nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }
function _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== "object" && typeof obj !== "function") { return { default: obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== "default" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }
const Example = props => {
  const [fromTime, setFromTime] = (0, _react.useState)(props.from || Date.now());
  const [toTime, setToTime] = (0, _react.useState)(props.to || Date.now());
  const intervalRef = (0, _react.useRef)();
  const fromString = new Date(fromTime).toISOString().replace(/\.[0-9]+Z$/, "");
  const toString = new Date(toTime).toISOString().replace(/\.[0-9]+Z$/, "");
  const difference = (0, _react.useMemo)(() => (0, _getTimeDifference.getTimeDifference)(fromTime, toTime), [fromTime, toTime]);
  (0, _react.useEffect)(() => {
    if (!props.to) {
      intervalRef.current = setInterval(() => setToTime(Date.now()), 1000);
      return () => clearInterval(intervalRef.current);
    }
  }, [props.to]);
  return /*#__PURE__*/_react.default.createElement(_react.default.Fragment, null, /*#__PURE__*/_react.default.createElement("div", {
    style: {
      display: "flex",
      gap: "10px"
    }
  }, /*#__PURE__*/_react.default.createElement(_react2.InputWrapper, {
    label: "From time",
    labelForId: "from-input"
  }, /*#__PURE__*/_react.default.createElement("input", {
    id: "from-input",
    type: "datetime-local",
    value: fromString,
    onChange: _ref => {
      let {
        target
      } = _ref;
      return setFromTime(target.valueAsNumber);
    }
  })), /*#__PURE__*/_react.default.createElement(_react2.InputWrapper, {
    label: "To time",
    labelForId: "to-input"
  }, /*#__PURE__*/_react.default.createElement("input", {
    id: "to-input",
    type: "datetime-local",
    value: toString,
    readOnly: !props.to,
    onChange: _ref2 => {
      let {
        target
      } = _ref2;
      return setToTime(target.valueAsNumber);
    }
  }))), /*#__PURE__*/_react.default.createElement(_blocks.Source, {
    dark: true,
    code: `
import { getTimeDifference } from "@baggie/core";

const fromTimestampMs = ${fromTime}; // ${fromString}
const toTimestampMs = ${toTime}; // ${toString}

const difference = getTimeDifference(fromTimestampMs, toTimestampMs);
/*
difference = ${JSON.stringify(difference, null, 4)}
*/
`
  }));
};
exports.Example = Example;
//# sourceMappingURL=Example.js.map