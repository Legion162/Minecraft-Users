"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.Example = void 0;
var _react = _interopRequireWildcard(require("react"));
var _blocks = require("@storybook/blocks");
var _react2 = require("@baggie/react");
var _ColorInput = require("../_components/ColorInput/ColorInput");
var _isHexColor = require("../check/isHexColor/isHexColor");
var _colorComparison = require("./colorComparison");
function _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== "function") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function (nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }
function _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== "object" && typeof obj !== "function") { return { default: obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== "default" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }
const Example = props => {
  const [compareColor, setCompareColor] = (0, _react.useState)(props.compareColor);
  const [colors, setColors] = (0, _react.useState)(props.colors);
  const comparisonRef = (0, _react.useRef)(new _colorComparison.ColorComparison(colors));
  const realColors = (0, _react.useMemo)(() => colors.filter(color => (0, _isHexColor.isHexColor)(color)), [colors]);
  const comparison = (0, _react.useMemo)(() => {
    try {
      comparisonRef.current.reset();
      comparisonRef.current.add(realColors);
      return comparisonRef.current.compare(compareColor);
    } catch (err) {
      return [];
    }
  }, [realColors, compareColor]);
  return /*#__PURE__*/_react.default.createElement(_react.default.Fragment, null, /*#__PURE__*/_react.default.createElement("div", {
    style: {
      display: "flex",
      gap: "10px",
      flexWrap: "wrap",
      marginBottom: "10px"
    }
  }, /*#__PURE__*/_react.default.createElement(_ColorInput.ColorInput, {
    label: "Compare color",
    value: compareColor,
    onChange: x => setCompareColor(x)
  })), /*#__PURE__*/_react.default.createElement("fieldset", null, /*#__PURE__*/_react.default.createElement("legend", null, "Palette"), /*#__PURE__*/_react.default.createElement("div", {
    style: {
      display: "flex",
      gap: "10px",
      flexWrap: "wrap"
    }
  }, colors.map((color, index) => /*#__PURE__*/_react.default.createElement(_ColorInput.ColorInput, {
    key: `${index}--${color}`,
    label: `Color ${index + 1}`,
    value: color,
    onChange: nc => setColors(x => {
      const newColors = [...x];
      newColors[index] = nc;
      return newColors;
    })
  })))), /*#__PURE__*/_react.default.createElement("div", {
    style: {
      marginTop: 20
    }
  }, /*#__PURE__*/_react.default.createElement(_react2.InputWrapper, {
    label: "Sorted",
    labelForId: undefined
  }, /*#__PURE__*/_react.default.createElement("div", {
    style: {
      display: "grid",
      gridAutoColumns: "minmax(0, 1fr)",
      gridAutoFlow: "column"
    }
  }, comparison.map((x, index) => /*#__PURE__*/_react.default.createElement("div", {
    key: `nearest-${index}-${x}`,
    style: {
      height: "50px",
      background: x
    }
  }))))), /*#__PURE__*/_react.default.createElement(_blocks.Source, {
    dark: true,
    code: `
import { ColorComparison } from "@baggie/core";

const colors = ${JSON.stringify(realColors, null, 4)};

const comparison = new ColorComparison(colors);

const sorted = comparison.compare("${compareColor}");
/*
sorted = ${JSON.stringify(comparison, null, 4)}
*/
`
  }));
};
exports.Example = Example;
//# sourceMappingURL=Example.js.map