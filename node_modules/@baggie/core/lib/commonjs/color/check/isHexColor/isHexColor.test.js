"use strict";

var _isHexColor = require("./isHexColor");
describe("isHexColor", () => {
  test("Short", () => {
    expect((0, _isHexColor.isHexColor)("#fff")).toBe(true);
  });
  test("Short with alpha", () => {
    expect((0, _isHexColor.isHexColor)("#fff7")).toBe(true);
  });
  test("Long", () => {
    expect((0, _isHexColor.isHexColor)("#ff00bb")).toBe(true);
  });
  test("Long with alpha", () => {
    expect((0, _isHexColor.isHexColor)("#ff00bb7f")).toBe(true);
  });
  test("Too short", () => {
    expect((0, _isHexColor.isHexColor)("#ff")).toBe(false);
  });
  test("Too long", () => {
    expect((0, _isHexColor.isHexColor)("#ffbb110")).toBe(false);
  });
  test("Short invalid", () => {
    expect((0, _isHexColor.isHexColor)("#fr0")).toBe(false);
    expect((0, _isHexColor.isHexColor)("#fffg")).toBe(false);
  });
  test("Long invalid", () => {
    expect((0, _isHexColor.isHexColor)("#ff00gg")).toBe(false);
    expect((0, _isHexColor.isHexColor)("#ffffffgg")).toBe(false);
  });
  test("Not even a hex", () => {
    expect((0, _isHexColor.isHexColor)("ff0")).toBe(false);
    expect((0, _isHexColor.isHexColor)("ffffff00")).toBe(false);
  });
});
//# sourceMappingURL=isHexColor.test.js.map