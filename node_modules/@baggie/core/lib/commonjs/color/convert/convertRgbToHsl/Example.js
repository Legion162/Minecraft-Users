"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.Example = void 0;
var _react = _interopRequireWildcard(require("react"));
var _blocks = require("@storybook/blocks");
var _react2 = require("@baggie/react");
var _ColorViewer = require("../../_components/ColorViewer/ColorViewer");
var _convertRgbToHex = require("../convertRgbToHex/convertRgbToHex");
var _convertRgbToHsl = require("./convertRgbToHsl");
function _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== "function") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function (nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }
function _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== "object" && typeof obj !== "function") { return { default: obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== "default" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }
const Example = props => {
  const [red, setRed] = (0, _react.useState)(props.red);
  const [green, setGreen] = (0, _react.useState)(props.green);
  const [blue, setBlue] = (0, _react.useState)(props.blue);
  const [alpha, setAlpha] = (0, _react.useState)(props.alpha);
  const hex = (0, _react.useMemo)(() => (0, _convertRgbToHex.convertRgbToHex)({
    red,
    green,
    blue,
    alpha
  }), [red, green, blue, alpha]);
  const hsl = (0, _react.useMemo)(() => (0, _convertRgbToHsl.convertRgbToHsl)({
    red,
    green,
    blue,
    alpha
  }), [red, green, blue, alpha]);
  return /*#__PURE__*/_react.default.createElement(_react.default.Fragment, null, /*#__PURE__*/_react.default.createElement("div", {
    style: {
      display: "flex",
      gap: "10px"
    }
  }, /*#__PURE__*/_react.default.createElement(_react2.InputWrapper, {
    label: "Red",
    labelRight: red,
    labelForId: "red-input"
  }, /*#__PURE__*/_react.default.createElement("input", {
    id: "red-input",
    type: "range",
    min: 0,
    max: 255,
    step: 1,
    value: red,
    onChange: _ref => {
      let {
        target
      } = _ref;
      return setRed(target.valueAsNumber);
    }
  })), /*#__PURE__*/_react.default.createElement(_react2.InputWrapper, {
    label: "Green",
    labelRight: green,
    labelForId: "green-input"
  }, /*#__PURE__*/_react.default.createElement("input", {
    id: "green-input",
    type: "range",
    min: 0,
    max: 255,
    step: 1,
    value: green,
    onChange: _ref2 => {
      let {
        target
      } = _ref2;
      return setGreen(target.valueAsNumber);
    }
  })), /*#__PURE__*/_react.default.createElement(_react2.InputWrapper, {
    label: "Blue",
    labelRight: blue,
    labelForId: "blue-input"
  }, /*#__PURE__*/_react.default.createElement("input", {
    id: "blue-input",
    type: "range",
    min: 0,
    max: 255,
    step: 1,
    value: blue,
    onChange: _ref3 => {
      let {
        target
      } = _ref3;
      return setBlue(target.valueAsNumber);
    }
  })), /*#__PURE__*/_react.default.createElement(_react2.InputWrapper, {
    label: "Alpha",
    labelRight: alpha.toFixed(2),
    labelForId: "alpha-input"
  }, /*#__PURE__*/_react.default.createElement("input", {
    id: "alpha-input",
    type: "range",
    min: 0,
    max: 1,
    step: 0.01,
    value: alpha,
    onChange: _ref4 => {
      let {
        target
      } = _ref4;
      return setAlpha(target.valueAsNumber);
    }
  }))), /*#__PURE__*/_react.default.createElement("div", {
    style: {
      marginTop: "25px",
      display: "flex",
      gap: "10px",
      alignItems: "flex-start"
    }
  }, /*#__PURE__*/_react.default.createElement(_ColorViewer.ColorViewer, {
    color: hex
  }), /*#__PURE__*/_react.default.createElement("table", {
    style: {
      margin: 0
    }
  }, /*#__PURE__*/_react.default.createElement("tbody", null, /*#__PURE__*/_react.default.createElement("tr", null, /*#__PURE__*/_react.default.createElement("td", null, /*#__PURE__*/_react.default.createElement("b", null, "Hue:")), /*#__PURE__*/_react.default.createElement("td", null, hsl.hue)), /*#__PURE__*/_react.default.createElement("tr", null, /*#__PURE__*/_react.default.createElement("td", null, /*#__PURE__*/_react.default.createElement("b", null, "Saturation:")), /*#__PURE__*/_react.default.createElement("td", null, hsl.saturation)), /*#__PURE__*/_react.default.createElement("tr", null, /*#__PURE__*/_react.default.createElement("td", null, /*#__PURE__*/_react.default.createElement("b", null, "Lightness:")), /*#__PURE__*/_react.default.createElement("td", null, hsl.lightness)), /*#__PURE__*/_react.default.createElement("tr", null, /*#__PURE__*/_react.default.createElement("td", null, /*#__PURE__*/_react.default.createElement("b", null, "Alpha:")), /*#__PURE__*/_react.default.createElement("td", null, hsl.alpha))))), /*#__PURE__*/_react.default.createElement(_blocks.Source, {
    dark: true,
    code: `
import { convertRgbToHsl } from "@baggie/core";

const rgb = {
   red: ${red},
   green: ${green},
   blue: ${blue},
   alpha: ${alpha},
};

const hsl = convertRgbToHsl(rgb);
/*
hsl = ${JSON.stringify(hsl, null, 4)}
*/
`
  }));
};
exports.Example = Example;
//# sourceMappingURL=Example.js.map