import React, { useMemo, useState } from "react";
import { Source } from "@storybook/blocks";
import { InputWrapper } from "@baggie/react";
import { isCprValid } from "./isCprValid";
export const Example = props => {
  const [cpr, setCpr] = useState(props.cprNumber);
  const [gender, setGender] = useState("");
  const isValid = useMemo(() => isCprValid(cpr, gender || undefined), [cpr, gender]);
  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement("div", {
    style: {
      display: "flex",
      flexDirection: "column",
      gap: "10px"
    }
  }, /*#__PURE__*/React.createElement(InputWrapper, {
    label: "CPR number",
    labelForId: "cpr-input"
  }, /*#__PURE__*/React.createElement("input", {
    id: "cpr-input",
    value: cpr,
    onChange: _ref => {
      let {
        target
      } = _ref;
      return setCpr(target.value);
    },
    spellCheck: false
  })), /*#__PURE__*/React.createElement("label", null, /*#__PURE__*/React.createElement("input", {
    type: "radio",
    name: "gender",
    checked: gender === "",
    onChange: () => setGender(() => "")
  }), " ", "Don't check gender"), /*#__PURE__*/React.createElement("label", null, /*#__PURE__*/React.createElement("input", {
    type: "radio",
    name: "gender",
    checked: gender === "f",
    onChange: () => setGender(() => "f")
  }), " ", "Female"), /*#__PURE__*/React.createElement("label", null, /*#__PURE__*/React.createElement("input", {
    type: "radio",
    name: "gender",
    checked: gender === "m",
    onChange: () => setGender(() => "m")
  }), " ", "Male")), /*#__PURE__*/React.createElement(Source, {
    dark: true,
    code: `
import { convertEmailsToLinks } from "@baggie/core";

const cprNumber = "${cpr}";
${gender ? `const gender = ${gender ? `"${gender}"` : ""};\n` : ""}
const isValid = isCprValid(cprNumber${gender ? ", gender" : ""});
// isValid = ${isValid ? "true" : "false"}
`
  }));
};
//# sourceMappingURL=Example.js.map