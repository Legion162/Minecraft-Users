import React, { useMemo, useState } from "react";
import { Source } from "@storybook/blocks";
import { InputWrapper } from "@baggie/react";
import { splitAtSpace } from "./splitAtSpace";
export const Example = props => {
  const [string, setString] = useState(props.string);
  const [nearestIndex, setNearestIndex] = useState(props.nearestIndex);
  const output = useMemo(() => splitAtSpace(string, nearestIndex), [string, nearestIndex]);
  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement("div", {
    style: {
      display: "flex",
      flexDirection: "column",
      gap: "10px"
    }
  }, /*#__PURE__*/React.createElement(InputWrapper, {
    label: "String",
    labelForId: "string-input"
  }, /*#__PURE__*/React.createElement("textarea", {
    id: "string-input",
    value: string,
    onChange: _ref => {
      let {
        target
      } = _ref;
      return setString(target.value);
    },
    style: {
      width: "100%",
      maxWidth: "360px"
    },
    spellCheck: false,
    rows: 3
  })), /*#__PURE__*/React.createElement(InputWrapper, {
    label: "Nearest index",
    labelForId: "nearest-index-input"
  }, /*#__PURE__*/React.createElement("input", {
    id: "nearest-index-input",
    value: nearestIndex,
    type: "number",
    onChange: _ref2 => {
      let {
        target
      } = _ref2;
      return setNearestIndex(target.valueAsNumber);
    }
  }))), /*#__PURE__*/React.createElement(Source, {
    dark: true,
    code: `
import { splitAtSpace } from "@baggie/core";

const string = \`${string.replace(/`/g, "\\`")}\`;
const nearestIndex = ${nearestIndex};

const output = splitAtSpace(input, nearestIndex);
/*
output = ${JSON.stringify(output, null, 4)}
*/
`
  }));
};
//# sourceMappingURL=Example.js.map