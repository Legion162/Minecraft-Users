import React, { useMemo, useState } from "react";
import { Source } from "@storybook/blocks";
import { InputWrapper } from "@baggie/react";
import { getCprRegex } from "./getCprRegex";
export const Example = props => {
  const [cpr, setCpr] = useState(props.cprNumber);
  const isValid = useMemo(() => getCprRegex().test(cpr), [cpr]);
  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(InputWrapper, {
    label: "CPR number",
    labelForId: "cpr-input"
  }, /*#__PURE__*/React.createElement("input", {
    id: "cpr-input",
    value: cpr,
    onChange: _ref => {
      let {
        target
      } = _ref;
      return setCpr(target.value);
    },
    spellCheck: false
  })), /*#__PURE__*/React.createElement(Source, {
    dark: true,
    code: `
import { getCprRegex } from "@baggie/core";

const cprNumber = "${cpr}";

const isCprFormatValid = getCprRegex().test(cprNumber);
// isCprFormatValid = ${isValid ? "true" : "false"}
`
  }), /*#__PURE__*/React.createElement("b", null, "The returned regex:"), /*#__PURE__*/React.createElement(Source, {
    dark: true,
    code: `new RegExp("${getCprRegex().source}", "${getCprRegex().flags}")`
  }));
};
//# sourceMappingURL=Example.js.map