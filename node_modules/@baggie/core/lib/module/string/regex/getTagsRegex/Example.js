import React, { useMemo, useState } from "react";
import { Source } from "@storybook/blocks";
import { InputWrapper } from "@baggie/react";
import { getTagsRegex } from "./getTagsRegex";
export const Example = props => {
  const [string, setString] = useState(props.string);
  const [groupSequentialTags, setGroupSequentialTags] = useState(false);
  const match = useMemo(() => string.match(getTagsRegex(groupSequentialTags)), [string, groupSequentialTags]);
  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(InputWrapper, {
    label: "String",
    labelForId: "string-input"
  }, /*#__PURE__*/React.createElement("textarea", {
    id: "string-input",
    value: string,
    onChange: _ref => {
      let {
        target
      } = _ref;
      return setString(target.value);
    },
    style: {
      width: "100%",
      maxWidth: "360px"
    },
    spellCheck: false,
    rows: 3
  })), /*#__PURE__*/React.createElement("label", null, /*#__PURE__*/React.createElement("input", {
    type: "checkbox",
    checked: groupSequentialTags,
    onChange: () => setGroupSequentialTags(x => !x)
  }), " ", "Group sequential tags"), /*#__PURE__*/React.createElement(Source, {
    dark: true,
    code: `
import { getTagsRegex } from "@baggie/core";

const string = "${string}";

const tags = string.match(getTagsRegex(${groupSequentialTags ? "true" : ""}));
// tags = ${JSON.stringify(match)}
`
  }), /*#__PURE__*/React.createElement("b", null, "The returned regex:"), /*#__PURE__*/React.createElement(Source, {
    dark: true,
    code: `new RegExp("${getTagsRegex(groupSequentialTags).source}", "${getTagsRegex(groupSequentialTags).flags}")`
  }));
};
//# sourceMappingURL=Example.js.map