import React, { useMemo, useState } from "react";
import { Source } from "@storybook/blocks";
import { InputWrapper } from "@baggie/react";
import { ColorViewer } from "../../_components/ColorViewer/ColorViewer";
import { convertRgbToHex } from "../convertRgbToHex/convertRgbToHex";
import { convertRgbToHsl } from "./convertRgbToHsl";
export const Example = props => {
  const [red, setRed] = useState(props.red);
  const [green, setGreen] = useState(props.green);
  const [blue, setBlue] = useState(props.blue);
  const [alpha, setAlpha] = useState(props.alpha);
  const hex = useMemo(() => convertRgbToHex({
    red,
    green,
    blue,
    alpha
  }), [red, green, blue, alpha]);
  const hsl = useMemo(() => convertRgbToHsl({
    red,
    green,
    blue,
    alpha
  }), [red, green, blue, alpha]);
  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement("div", {
    style: {
      display: "flex",
      gap: "10px"
    }
  }, /*#__PURE__*/React.createElement(InputWrapper, {
    label: "Red",
    labelRight: red,
    labelForId: "red-input"
  }, /*#__PURE__*/React.createElement("input", {
    id: "red-input",
    type: "range",
    min: 0,
    max: 255,
    step: 1,
    value: red,
    onChange: _ref => {
      let {
        target
      } = _ref;
      return setRed(target.valueAsNumber);
    }
  })), /*#__PURE__*/React.createElement(InputWrapper, {
    label: "Green",
    labelRight: green,
    labelForId: "green-input"
  }, /*#__PURE__*/React.createElement("input", {
    id: "green-input",
    type: "range",
    min: 0,
    max: 255,
    step: 1,
    value: green,
    onChange: _ref2 => {
      let {
        target
      } = _ref2;
      return setGreen(target.valueAsNumber);
    }
  })), /*#__PURE__*/React.createElement(InputWrapper, {
    label: "Blue",
    labelRight: blue,
    labelForId: "blue-input"
  }, /*#__PURE__*/React.createElement("input", {
    id: "blue-input",
    type: "range",
    min: 0,
    max: 255,
    step: 1,
    value: blue,
    onChange: _ref3 => {
      let {
        target
      } = _ref3;
      return setBlue(target.valueAsNumber);
    }
  })), /*#__PURE__*/React.createElement(InputWrapper, {
    label: "Alpha",
    labelRight: alpha.toFixed(2),
    labelForId: "alpha-input"
  }, /*#__PURE__*/React.createElement("input", {
    id: "alpha-input",
    type: "range",
    min: 0,
    max: 1,
    step: 0.01,
    value: alpha,
    onChange: _ref4 => {
      let {
        target
      } = _ref4;
      return setAlpha(target.valueAsNumber);
    }
  }))), /*#__PURE__*/React.createElement("div", {
    style: {
      marginTop: "25px",
      display: "flex",
      gap: "10px",
      alignItems: "flex-start"
    }
  }, /*#__PURE__*/React.createElement(ColorViewer, {
    color: hex
  }), /*#__PURE__*/React.createElement("table", {
    style: {
      margin: 0
    }
  }, /*#__PURE__*/React.createElement("tbody", null, /*#__PURE__*/React.createElement("tr", null, /*#__PURE__*/React.createElement("td", null, /*#__PURE__*/React.createElement("b", null, "Hue:")), /*#__PURE__*/React.createElement("td", null, hsl.hue)), /*#__PURE__*/React.createElement("tr", null, /*#__PURE__*/React.createElement("td", null, /*#__PURE__*/React.createElement("b", null, "Saturation:")), /*#__PURE__*/React.createElement("td", null, hsl.saturation)), /*#__PURE__*/React.createElement("tr", null, /*#__PURE__*/React.createElement("td", null, /*#__PURE__*/React.createElement("b", null, "Lightness:")), /*#__PURE__*/React.createElement("td", null, hsl.lightness)), /*#__PURE__*/React.createElement("tr", null, /*#__PURE__*/React.createElement("td", null, /*#__PURE__*/React.createElement("b", null, "Alpha:")), /*#__PURE__*/React.createElement("td", null, hsl.alpha))))), /*#__PURE__*/React.createElement(Source, {
    dark: true,
    code: `
import { convertRgbToHsl } from "@baggie/core";

const rgb = {
   red: ${red},
   green: ${green},
   blue: ${blue},
   alpha: ${alpha},
};

const hsl = convertRgbToHsl(rgb);
/*
hsl = ${JSON.stringify(hsl, null, 4)}
*/
`
  }));
};
//# sourceMappingURL=Example.js.map