import React, { useMemo, useState } from "react";
import { Source } from "@storybook/blocks";
import { InputWrapper } from "@baggie/react";
import { ColorInput } from "../../_components/ColorInput/ColorInput";
import { normalizeHexColor } from "./normalizeHexColor";
export const Example = props => {
  const [hex, setHex] = useState(props.hex);
  const normalized = useMemo(() => normalizeHexColor(hex), [hex]);
  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement("div", {
    style: {
      display: "flex",
      gap: "10px"
    }
  }, /*#__PURE__*/React.createElement(ColorInput, {
    label: "Hex color",
    value: hex,
    onChange: setHex
  }), /*#__PURE__*/React.createElement(InputWrapper, {
    label: "Normalized",
    labelForId: undefined
  }, normalized ? normalized : "undefined")), /*#__PURE__*/React.createElement(Source, {
    dark: true,
    code: `
import { normalizeHexColor } from "@baggie/core";

const hex = "${hex}";

const normalized = normalizeHexColor(hex);
// normalized = ${normalized ? `"${normalized}"` : "undefined"}
`
  }));
};
//# sourceMappingURL=Example.js.map