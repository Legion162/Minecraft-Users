import React, { useMemo, useRef, useState } from "react";
import { Source } from "@storybook/blocks";
import { InputWrapper } from "@baggie/react";
import { ColorInput } from "../_components/ColorInput/ColorInput";
import { isHexColor } from "../check/isHexColor/isHexColor";
import { ColorComparison } from "./colorComparison";
export const Example = props => {
  const [compareColor, setCompareColor] = useState(props.compareColor);
  const [colors, setColors] = useState(props.colors);
  const comparisonRef = useRef(new ColorComparison(colors));
  const realColors = useMemo(() => colors.filter(color => isHexColor(color)), [colors]);
  const comparison = useMemo(() => {
    try {
      comparisonRef.current.reset();
      comparisonRef.current.add(realColors);
      return comparisonRef.current.compare(compareColor);
    } catch (err) {
      return [];
    }
  }, [realColors, compareColor]);
  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement("div", {
    style: {
      display: "flex",
      gap: "10px",
      flexWrap: "wrap",
      marginBottom: "10px"
    }
  }, /*#__PURE__*/React.createElement(ColorInput, {
    label: "Compare color",
    value: compareColor,
    onChange: x => setCompareColor(x)
  })), /*#__PURE__*/React.createElement("fieldset", null, /*#__PURE__*/React.createElement("legend", null, "Palette"), /*#__PURE__*/React.createElement("div", {
    style: {
      display: "flex",
      gap: "10px",
      flexWrap: "wrap"
    }
  }, colors.map((color, index) => /*#__PURE__*/React.createElement(ColorInput, {
    key: `${index}--${color}`,
    label: `Color ${index + 1}`,
    value: color,
    onChange: nc => setColors(x => {
      const newColors = [...x];
      newColors[index] = nc;
      return newColors;
    })
  })))), /*#__PURE__*/React.createElement("div", {
    style: {
      marginTop: 20
    }
  }, /*#__PURE__*/React.createElement(InputWrapper, {
    label: "Sorted",
    labelForId: undefined
  }, /*#__PURE__*/React.createElement("div", {
    style: {
      display: "grid",
      gridAutoColumns: "minmax(0, 1fr)",
      gridAutoFlow: "column"
    }
  }, comparison.map((x, index) => /*#__PURE__*/React.createElement("div", {
    key: `nearest-${index}-${x}`,
    style: {
      height: "50px",
      background: x
    }
  }))))), /*#__PURE__*/React.createElement(Source, {
    dark: true,
    code: `
import { ColorComparison } from "@baggie/core";

const colors = ${JSON.stringify(realColors, null, 4)};

const comparison = new ColorComparison(colors);

const sorted = comparison.compare("${compareColor}");
/*
sorted = ${JSON.stringify(comparison, null, 4)}
*/
`
  }));
};
//# sourceMappingURL=Example.js.map