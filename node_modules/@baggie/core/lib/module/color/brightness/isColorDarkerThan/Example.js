import React, { useMemo, useState } from "react";
import { Source } from "@storybook/blocks";
import { InputWrapper } from "@baggie/react";
import { ColorViewer } from "../../_components/ColorViewer/ColorViewer";
import { ColorInput } from "../../_components/ColorInput/ColorInput";
import { isColorDarkerThan } from "./isColorDarkerThan";
export const Example = props => {
  const [colorA, setColorA] = useState(props.colorA);
  const [colorB, setColorB] = useState(props.colorB);
  const isDarker = useMemo(() => isColorDarkerThan(colorA, colorB), [colorA, colorB]);
  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement("div", {
    style: {
      display: "flex",
      gap: "10px"
    }
  }, /*#__PURE__*/React.createElement(ColorInput, {
    label: "Color A",
    value: colorA,
    onChange: setColorA
  }), /*#__PURE__*/React.createElement(ColorInput, {
    label: "Color B",
    value: colorB,
    onChange: setColorB
  }), /*#__PURE__*/React.createElement(InputWrapper, {
    label: "Is A darker than B",
    labelForId: undefined
  }, /*#__PURE__*/React.createElement("div", {
    style: {
      padding: "5px 0"
    }
  }, isDarker ? "true" : "false"))), /*#__PURE__*/React.createElement("div", {
    style: {
      marginTop: "25px"
    }
  }, /*#__PURE__*/React.createElement(ColorViewer, {
    color: colorA,
    splitColor: colorB
  })), /*#__PURE__*/React.createElement(Source, {
    dark: true,
    code: `
import { isColorDarkerThan } from "@baggie/core";

const colorA = "${colorA}";
const colorB = "${colorB}";

const answer = isColorDarkerThan(colorA, colorB);
// answer = ${isDarker ? "true" : "false"}
`
  }));
};
//# sourceMappingURL=Example.js.map