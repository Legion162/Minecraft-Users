import React, { useMemo, useState } from "react";
import { Source } from "@storybook/blocks";
import { InputWrapper } from "@baggie/react";
import { ColorInput } from "../../_components/ColorInput/ColorInput";
import { getColorBrightness } from "./getColorBrightness";
export const Example = props => {
  const [color, setColor] = useState(props.color);
  const brightness = useMemo(() => getColorBrightness(color), [color]);
  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement("div", {
    style: {
      display: "flex",
      gap: "10px"
    }
  }, /*#__PURE__*/React.createElement(ColorInput, {
    label: "Color",
    value: color,
    onChange: setColor
  }), /*#__PURE__*/React.createElement(InputWrapper, {
    label: "Brightness",
    labelForId: undefined
  }, /*#__PURE__*/React.createElement("div", {
    style: {
      padding: "5px 0"
    }
  }, brightness))), /*#__PURE__*/React.createElement(Source, {
    dark: true,
    code: `
import { getColorBrightness } from "@baggie/core";

const color = "${color}";

const brightness = getColorBrightness(color);
// brightness = ${brightness}
`
  }));
};
//# sourceMappingURL=Example.js.map