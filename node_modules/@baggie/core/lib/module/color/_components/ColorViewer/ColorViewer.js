import React, { useMemo } from "react";
import { isHexColor } from "../../check/isHexColor/isHexColor";
import S from "./ColorViewer.module.scss";
export const ColorViewer = _ref => {
  let {
    color,
    splitColor
  } = _ref;
  const isSplit = useMemo(() => typeof splitColor === "string", [splitColor]);
  const isValidA = useMemo(() => color ? isHexColor(color) : false, [color]);
  const isValidB = useMemo(() => isSplit ? isHexColor(splitColor) : false, [isSplit, splitColor]);
  return /*#__PURE__*/React.createElement("div", {
    className: S.wrapper
  }, /*#__PURE__*/React.createElement("div", {
    className: S.insideWrapper
  }, isValidA && (!isSplit || isValidB) || /*#__PURE__*/React.createElement("svg", {
    height: "100px",
    width: "100px",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 31 31",
    className: S.crossSvg
  }, /*#__PURE__*/React.createElement("g", {
    transform: "rotate(45 15.5 15.5)",
    fill: "#900"
  }, /*#__PURE__*/React.createElement("rect", {
    x: "15",
    y: "5",
    width: "1",
    height: "21"
  }), /*#__PURE__*/React.createElement("rect", {
    x: "5",
    y: "15",
    width: "21",
    height: "1"
  }))), /*#__PURE__*/React.createElement("div", {
    className: S.colorA,
    style: {
      border: `50px solid ${isSplit || !isValidA ? "transparent" : color}`,
      borderTopColor: isValidA ? color : "transparent",
      borderLeftColor: isValidA ? color : "transparent"
    }
  }), isSplit ? /*#__PURE__*/React.createElement("div", {
    className: S.colorB,
    style: {
      borderRightColor: isValidB ? splitColor : "transparent",
      borderBottomColor: isValidB ? splitColor : "transparent"
    }
  }) : null), isSplit || /*#__PURE__*/React.createElement("div", {
    className: S.text
  }, color));
};
//# sourceMappingURL=ColorViewer.js.map