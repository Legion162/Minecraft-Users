import React, { useMemo, useState } from "react";
import { Source } from "@storybook/blocks";
import { InputWrapper } from "@baggie/react";
import { getAge } from "./getAge";
export const Example = props => {
  const [fromTime, setFromTime] = useState(props.birth);
  const [toTime, setToTime] = useState(props.death);
  const fromString = new Date(fromTime).toISOString().replace(/\.[0-9]+Z$/, "");
  const toString = toTime ? new Date(toTime).toISOString().replace(/\.[0-9]+Z$/, "") : "";
  const age = useMemo(() => getAge(fromTime, toTime), [fromTime, toTime]);
  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement("div", {
    style: {
      display: "flex",
      gap: "10px"
    }
  }, /*#__PURE__*/React.createElement(InputWrapper, {
    label: "Birth",
    labelForId: "birth-input"
  }, /*#__PURE__*/React.createElement("input", {
    id: "birth-input",
    type: "datetime-local",
    value: fromString,
    onChange: _ref => {
      let {
        target
      } = _ref;
      return setFromTime(new Date(target.valueAsNumber));
    }
  })), /*#__PURE__*/React.createElement(InputWrapper, {
    label: "To time",
    labelForId: "to-input"
  }, /*#__PURE__*/React.createElement("input", {
    id: "to-input",
    type: "datetime-local",
    value: toString,
    onChange: _ref2 => {
      let {
        target
      } = _ref2;
      return setToTime(new Date(target.valueAsNumber));
    }
  }))), /*#__PURE__*/React.createElement(Source, {
    dark: true,
    code: `
import { getAge } from "@baggie/core";

const birth = "${fromTime.toDateString()}";
${toTime ? `const death = "${toTime === null || toTime === void 0 ? void 0 : toTime.toDateString()}";
` : ""}
const age = getAge(birth${toTime ? ", death" : ""});
// age = ${age}
`
  }));
};
//# sourceMappingURL=Example.js.map