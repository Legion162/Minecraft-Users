import React, { useEffect, useMemo, useRef, useState } from "react";
import { Source } from "@storybook/blocks";
import { InputWrapper } from "@baggie/react";
import { getTimeDifference } from "./getTimeDifference";
export const Example = props => {
  const [fromTime, setFromTime] = useState(props.from || Date.now());
  const [toTime, setToTime] = useState(props.to || Date.now());
  const intervalRef = useRef();
  const fromString = new Date(fromTime).toISOString().replace(/\.[0-9]+Z$/, "");
  const toString = new Date(toTime).toISOString().replace(/\.[0-9]+Z$/, "");
  const difference = useMemo(() => getTimeDifference(fromTime, toTime), [fromTime, toTime]);
  useEffect(() => {
    if (!props.to) {
      intervalRef.current = setInterval(() => setToTime(Date.now()), 1000);
      return () => clearInterval(intervalRef.current);
    }
  }, [props.to]);
  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement("div", {
    style: {
      display: "flex",
      gap: "10px"
    }
  }, /*#__PURE__*/React.createElement(InputWrapper, {
    label: "From time",
    labelForId: "from-input"
  }, /*#__PURE__*/React.createElement("input", {
    id: "from-input",
    type: "datetime-local",
    value: fromString,
    onChange: _ref => {
      let {
        target
      } = _ref;
      return setFromTime(target.valueAsNumber);
    }
  })), /*#__PURE__*/React.createElement(InputWrapper, {
    label: "To time",
    labelForId: "to-input"
  }, /*#__PURE__*/React.createElement("input", {
    id: "to-input",
    type: "datetime-local",
    value: toString,
    readOnly: !props.to,
    onChange: _ref2 => {
      let {
        target
      } = _ref2;
      return setToTime(target.valueAsNumber);
    }
  }))), /*#__PURE__*/React.createElement(Source, {
    dark: true,
    code: `
import { getTimeDifference } from "@baggie/core";

const fromTimestampMs = ${fromTime}; // ${fromString}
const toTimestampMs = ${toTime}; // ${toString}

const difference = getTimeDifference(fromTimestampMs, toTimestampMs);
/*
difference = ${JSON.stringify(difference, null, 4)}
*/
`
  }));
};
//# sourceMappingURL=Example.js.map