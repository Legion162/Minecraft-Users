import React, { useMemo, useState } from "react";
import { Source } from "@storybook/blocks";
import { InputWrapper } from "@baggie/react";
import { getDuration } from "./getDuration";
export const Example = props => {
  const [speed, setSpeed] = useState(props.speed);
  const [distance, setDistance] = useState(props.distance);
  const duration = useMemo(() => getDuration(speed, distance), [speed, distance]);
  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement("div", {
    style: {
      display: "flex",
      gap: "10px"
    }
  }, /*#__PURE__*/React.createElement(InputWrapper, {
    label: "Speed",
    labelForId: "speed-input"
  }, /*#__PURE__*/React.createElement("input", {
    id: "speed-input",
    type: "number",
    value: speed,
    onChange: _ref => {
      let {
        target
      } = _ref;
      return setSpeed(target.valueAsNumber);
    }
  })), /*#__PURE__*/React.createElement(InputWrapper, {
    label: "Distance",
    labelForId: "distance-input"
  }, /*#__PURE__*/React.createElement("input", {
    id: "distance-input",
    type: "number",
    value: distance,
    onChange: _ref2 => {
      let {
        target
      } = _ref2;
      return setDistance(target.valueAsNumber);
    }
  })), /*#__PURE__*/React.createElement(InputWrapper, {
    label: "Duration",
    labelForId: undefined
  }, /*#__PURE__*/React.createElement("div", {
    style: {
      padding: "5px 0"
    }
  }, isNaN(duration) ? "Error" : duration))), /*#__PURE__*/React.createElement(Source, {
    dark: true,
    code: `
import { getDuration } from "@baggie/core";

const speed = ${speed};
const distance = ${distance};

const duration = getDuration(speed, distance);
// duration = ${duration}
`
  }));
};
//# sourceMappingURL=Example.js.map