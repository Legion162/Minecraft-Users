import React, { useMemo, useState } from "react";
import { Source } from "@storybook/blocks";
import { InputWrapper } from "@baggie/react";
import { getPercentageBetween } from "./getPercentageBetween";
export const Example = props => {
  const [from, setFrom] = useState(props.from);
  const [to, setTo] = useState(props.to);
  const [position, setPosition] = useState(props.position);
  const result = useMemo(() => getPercentageBetween(position, {
    from,
    to
  }), [from, to, position]);
  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement("div", {
    style: {
      display: "flex",
      gap: "10px"
    }
  }, /*#__PURE__*/React.createElement(InputWrapper, {
    label: "Position",
    labelForId: "position-input"
  }, /*#__PURE__*/React.createElement("input", {
    id: "position-input",
    type: "number",
    value: position,
    onChange: _ref => {
      let {
        target
      } = _ref;
      return setPosition(target.valueAsNumber || 0);
    }
  })), /*#__PURE__*/React.createElement(InputWrapper, {
    label: "From",
    labelForId: "from-input"
  }, /*#__PURE__*/React.createElement("input", {
    id: "from-input",
    type: "number",
    value: from,
    onChange: _ref2 => {
      let {
        target
      } = _ref2;
      return setFrom(target.valueAsNumber || 0);
    }
  })), /*#__PURE__*/React.createElement(InputWrapper, {
    label: "To",
    labelForId: "to-input"
  }, /*#__PURE__*/React.createElement("input", {
    id: "to-input",
    type: "number",
    value: to,
    onChange: _ref3 => {
      let {
        target
      } = _ref3;
      return setTo(target.valueAsNumber || 0);
    }
  })), /*#__PURE__*/React.createElement(InputWrapper, {
    label: "Percentage",
    labelForId: undefined
  }, /*#__PURE__*/React.createElement("div", {
    style: {
      padding: "5px 0"
    }
  }, result))), /*#__PURE__*/React.createElement(Source, {
    dark: true,
    code: `
import { getPercentageBetween } from "@baggie/core";

const percentage = getPercentageBetween(${position}, { from: ${from}, to: ${to} });
// percentage = ${result}
`
  }));
};
//# sourceMappingURL=Example.js.map