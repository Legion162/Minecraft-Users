import React, { useMemo, useState } from "react";
import { Source } from "@storybook/blocks";
import { InputWrapper } from "@baggie/react";
import { nonNumberFallback } from "./nonNumberFallback";
export const Example = props => {
  const [input, setInput] = useState(props.defaultInput);
  const [fallback, setFallback] = useState(props.defaultFallback);
  const output = useMemo(() => nonNumberFallback(input, fallback), [input, fallback]);
  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement("div", {
    style: {
      display: "flex",
      gap: "10px"
    }
  }, /*#__PURE__*/React.createElement(InputWrapper, {
    label: "Input",
    labelForId: "input-input"
  }, /*#__PURE__*/React.createElement("input", {
    id: "input-input",
    value: input,
    onChange: _ref => {
      let {
        target
      } = _ref;
      return setInput(target.value);
    }
  })), /*#__PURE__*/React.createElement(InputWrapper, {
    label: "Fallback",
    labelForId: "fallback-input"
  }, /*#__PURE__*/React.createElement("input", {
    id: "fallback-input",
    value: fallback,
    type: "number",
    onChange: _ref2 => {
      let {
        target
      } = _ref2;
      return setFallback(target.valueAsNumber);
    }
  })), /*#__PURE__*/React.createElement(InputWrapper, {
    label: "Output",
    labelForId: undefined
  }, /*#__PURE__*/React.createElement("div", {
    style: {
      padding: "5px 0"
    }
  }, output))), /*#__PURE__*/React.createElement(Source, {
    dark: true,
    code: `
import { nonNumberFallback } from "@baggie/core";

const input = ${isNaN(input) ? `"${input}"` : input.trim() || "undefined"};
const fallback = ${fallback};

const output = nonNumberFallback(input, fallback);
// output = ${output}
`
  }));
};
//# sourceMappingURL=Example.js.map