import React, { useMemo, useState } from "react";
import { Source } from "@storybook/blocks";
import { InputWrapper } from "@baggie/react";
import { countDecimals } from "./countDecimals";
export const Example = props => {
  const [input, setInput] = useState(props.defaultInput);
  const decimals = useMemo(() => countDecimals(input), [input]);
  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement("div", {
    style: {
      display: "flex",
      gap: "10px"
    }
  }, /*#__PURE__*/React.createElement(InputWrapper, {
    label: "Number",
    labelForId: "number-input"
  }, /*#__PURE__*/React.createElement("input", {
    id: "number-input",
    type: "number",
    value: input,
    onChange: _ref => {
      let {
        target
      } = _ref;
      return setInput(target.value);
    }
  })), /*#__PURE__*/React.createElement(InputWrapper, {
    label: "Decimals",
    labelForId: undefined
  }, /*#__PURE__*/React.createElement("div", {
    style: {
      padding: "5px 0"
    }
  }, isNaN(decimals) ? "Error" : decimals))), /*#__PURE__*/React.createElement(Source, {
    dark: true,
    code: `
import { countDecimals } from "@baggie/core";

const number = ${input};

const decimals = countDecimals(number);
// decimals = ${decimals}
`
  }));
};
//# sourceMappingURL=Example.js.map