import React, { useMemo, useState } from "react";
import { Source } from "@storybook/blocks";
import { InputWrapper } from "@baggie/react";
import { addNumbers } from "./addNumbers";
export const Example = props => {
  const [input, setInput] = useState(props.defaultInput.join(", "));
  const {
    numbers,
    total
  } = useMemo(() => {
    const numbers = input.split(/\s*,\s*/).filter(value => value.length).map(string => string.match(/^-?[0-9]*\.?[0-9]*$/) ? parseFloat(string) : NaN);
    return {
      numbers,
      total: addNumbers(numbers)
    };
  }, [input]);
  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement("div", {
    style: {
      display: "flex",
      gap: "10px"
    }
  }, /*#__PURE__*/React.createElement(InputWrapper, {
    label: "Input",
    labelForId: "input-input"
  }, /*#__PURE__*/React.createElement("input", {
    id: "input-input",
    value: input,
    onChange: _ref => {
      let {
        target
      } = _ref;
      return setInput(target.value);
    },
    spellCheck: false
  })), /*#__PURE__*/React.createElement(InputWrapper, {
    label: "Output",
    labelForId: undefined
  }, /*#__PURE__*/React.createElement("div", {
    style: {
      padding: "5px 0"
    }
  }, isNaN(total) ? "Error" : total))), /*#__PURE__*/React.createElement(Source, {
    dark: true,
    code: `
import { addNumbers } from "@baggie/core";

const numbers = [${numbers.join(", ")}];

const total = addNumbers(numbers);
// total = ${total}
`
  }));
};
//# sourceMappingURL=Example.js.map