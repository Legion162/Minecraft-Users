import { mergeIntervals } from "../mergeIntervals/mergeIntervals";
/**
 * Make sure a number is outside the range of a minimum and maximum value.
 */
export const keepOutsideRange = function (number, ranges) {
  let combineEquals = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : true;
  return mergeIntervals(ranges, combineEquals).reduce((returnNumber, _ref) => {
    let {
      from,
      to
    } = _ref;
    return returnNumber > from && returnNumber < to ? [from, to].reduce((previous, current) => {
      const a = Math.abs(current - returnNumber);
      const b = Math.abs(previous - returnNumber);
      return a <= b ? current : previous;
    }) : returnNumber;
  }, number);
};
//# sourceMappingURL=keepOutsideRange.js.map